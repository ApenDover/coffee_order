plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.4.0'
    id 'checkstyle'
}

repositories {
    mavenLocal()
    mavenCentral()
}

group = 'ts.andrey'
version = '0.1'

ext {
    set('springCloudVersion', "2025.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

    implementation 'jakarta.validation:jakarta.validation-api:3.1.1'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

    implementation 'io.swagger.core.v3:swagger-annotations:2.2.21'

    compileOnly 'org.projectlombok:lombok:1.18.38'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

test {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/client/src/main/resources/openapi/serverApi.yml"
    outputDir = "$buildDir/generated"
    apiPackage = "ts.andrey.api"
    modelPackage = "ts.andrey.model"
    invokerPackage = "ts.andrey.invoker"
    configOptions = [
            library             : "spring-cloud",
            dateLibrary         : "java8",
            interfaceOnly       : "true",
            useSpringBoot3      : "true",
            serializationLibrary: "jackson",
            generateApiTests    : "false",
            generateModelTests  : "false"
    ]
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
    test {
        java {
            srcDir "$buildDir/generated/src/test/java"
        }
    }
}

bootJar {
    enabled = true
}

tasks.named("compileJava").configure {
    dependsOn tasks.named("openApiGenerate")
}

checkstyle {
    toolVersion = '10.12.3'
    configFile = file("$rootDir/config/checkstyle/checkstyle.xml")
    configProperties = [
            'checkstyle.suppressions.file': "$rootDir/config/checkstyle/suppressions.xml"
    ]
    showViolations = true
}

